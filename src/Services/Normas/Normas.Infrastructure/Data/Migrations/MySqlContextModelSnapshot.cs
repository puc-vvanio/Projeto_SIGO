// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SIGO.Normas.Infrastructure.Data.Context;

namespace SIGO.Normas.Infrastructure.Data.Migrations
{
    [DbContext(typeof(MySqlContext))]
    partial class MySqlContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("SIGO.Normas.Domain.Entities.Norma", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("datetime");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("NomeArquivo")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UltimoAcesso")
                        .HasColumnType("datetime");

                    b.HasKey("Id")
                        .HasName("PK_Normas");

                    b.HasIndex("Nome")
                        .HasDatabaseName("Idx_Nome");

                    b.ToTable("normas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataCriacao = new DateTime(2021, 3, 23, 9, 29, 2, 508, DateTimeKind.Local).AddTicks(1776),
                            Descricao = "Sistema de Gestao da Qualidade",
                            Nome = "ISO 9001",
                            NomeArquivo = "ISO9001.pdf",
                            Status = 0,
                            Tipo = 2
                        },
                        new
                        {
                            Id = 2,
                            DataCriacao = new DateTime(2021, 3, 23, 9, 29, 2, 508, DateTimeKind.Local).AddTicks(4363),
                            Descricao = "Sistema de Gestao Ambiental",
                            Nome = "ISO 14001",
                            NomeArquivo = "ISO14001.pdf",
                            Status = 0,
                            Tipo = 2
                        },
                        new
                        {
                            Id = 3,
                            DataCriacao = new DateTime(2021, 3, 23, 9, 29, 2, 508, DateTimeKind.Local).AddTicks(4370),
                            Descricao = "Sistema de Gestao de Seguranca da Informacao",
                            Nome = "ISO 27001",
                            NomeArquivo = "ISO27001.pdf",
                            Status = 0,
                            Tipo = 2
                        },
                        new
                        {
                            Id = 4,
                            DataCriacao = new DateTime(2021, 3, 23, 9, 29, 2, 508, DateTimeKind.Local).AddTicks(4372),
                            Descricao = "Servicos Especializados em Eng. de Seguranca e em Medicina do Trabalho",
                            Nome = "NR 4",
                            NomeArquivo = "NR4.pdf",
                            Status = 0,
                            Tipo = 2
                        },
                        new
                        {
                            Id = 5,
                            DataCriacao = new DateTime(2021, 3, 23, 9, 29, 2, 508, DateTimeKind.Local).AddTicks(4374),
                            Descricao = "Equipamentos de Protecao Individual - EPI",
                            Nome = "NR 6",
                            NomeArquivo = "NR6.pdf",
                            Status = 0,
                            Tipo = 2
                        },
                        new
                        {
                            Id = 6,
                            DataCriacao = new DateTime(2021, 3, 23, 9, 29, 2, 508, DateTimeKind.Local).AddTicks(4376),
                            Descricao = "Programas de Controle Medico de Saude Ocupacional - PCMSO",
                            Nome = "NR 7",
                            NomeArquivo = "NR7.pdf",
                            Status = 0,
                            Tipo = 2
                        });
                });

            modelBuilder.Entity("SIGO.Normas.Domain.Entities.Repositorio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("datetime");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("URL_API")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UltimoAcesso")
                        .HasColumnType("datetime");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id")
                        .HasName("PK_Repositorios");

                    b.HasIndex("Nome")
                        .HasDatabaseName("Idx_Nome");

                    b.ToTable("repositorios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataCriacao = new DateTime(2021, 3, 23, 9, 29, 2, 511, DateTimeKind.Local).AddTicks(2915),
                            Descricao = "Repositorio de Normas Fake 1",
                            Nome = "Repositorio 1",
                            Senha = "sigo",
                            URL_API = "http://162.243.37.75/normas",
                            Usuario = "sigo"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
