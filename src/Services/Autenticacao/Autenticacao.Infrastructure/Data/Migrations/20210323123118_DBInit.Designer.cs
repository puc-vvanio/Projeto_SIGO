// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SIGO.Autenticacao.Infrastructure.Data.Context;

namespace SIGO.Autenticacao.Infrastructure.Data.Migrations
{
    [DbContext(typeof(MySqlContext))]
    [Migration("20210323123118_DBInit")]
    partial class DBInit
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("SIGO.Autenticacao.Domain.Entities.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<short>("Perfil")
                        .HasColumnType("smallint");

                    b.Property<byte[]>("SenhaHash")
                        .IsRequired()
                        .HasColumnType("varbinary(64)");

                    b.Property<byte[]>("SenhaSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(128)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UltimoAcesso")
                        .HasColumnType("datetime");

                    b.HasKey("Id")
                        .HasName("PK_Usuarios");

                    b.HasIndex("Nome")
                        .HasDatabaseName("Idx_Nome");

                    b.ToTable("usuarios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataCriacao = new DateTime(2021, 3, 23, 9, 31, 17, 871, DateTimeKind.Local).AddTicks(9555),
                            Email = "admin@sigo.com.br",
                            Nome = "Usuario 1",
                            Perfil = (short)32767,
                            SenhaHash = new byte[] { 228, 96, 138, 100, 229, 103, 12, 6, 72, 36, 24, 89, 104, 255, 175, 206, 166, 236, 108, 131, 169, 221, 30, 94, 113, 88, 95, 230, 245, 244, 215, 254, 51, 75, 178, 128, 226, 227, 0, 237, 132, 213, 110, 34, 112, 104, 190, 165, 44, 115, 132, 90, 50, 90, 194, 115, 239, 0, 40, 63, 90, 164, 155, 9 },
                            SenhaSalt = new byte[] { 33, 247, 226, 24, 225, 190, 8, 126, 236, 78, 252, 107, 174, 176, 90, 156, 113, 174, 174, 78, 177, 251, 168, 19, 37, 38, 118, 104, 89, 171, 226, 253, 131, 106, 154, 53, 230, 111, 132, 93, 188, 1, 26, 205, 116, 201, 43, 181, 146, 72, 236, 25, 95, 36, 61, 74, 31, 237, 105, 29, 183, 76, 8, 43, 227, 92, 204, 125, 237, 206, 94, 241, 68, 58, 52, 201, 106, 139, 223, 73, 171, 85, 109, 137, 75, 228, 181, 216, 117, 79, 56, 85, 33, 41, 17, 36, 192, 44, 215, 239, 58, 27, 73, 148, 18, 14, 237, 206, 140, 125, 230, 42, 9, 146, 20, 38, 165, 222, 227, 192, 8, 150, 255, 182, 225, 157, 198, 128 },
                            Status = 0
                        },
                        new
                        {
                            Id = 2,
                            DataCriacao = new DateTime(2021, 3, 23, 9, 31, 17, 872, DateTimeKind.Local).AddTicks(2806),
                            Email = "gerente@sigo.com.br",
                            Nome = "Usuario 2",
                            Perfil = (short)1,
                            SenhaHash = new byte[] { 228, 96, 138, 100, 229, 103, 12, 6, 72, 36, 24, 89, 104, 255, 175, 206, 166, 236, 108, 131, 169, 221, 30, 94, 113, 88, 95, 230, 245, 244, 215, 254, 51, 75, 178, 128, 226, 227, 0, 237, 132, 213, 110, 34, 112, 104, 190, 165, 44, 115, 132, 90, 50, 90, 194, 115, 239, 0, 40, 63, 90, 164, 155, 9 },
                            SenhaSalt = new byte[] { 33, 247, 226, 24, 225, 190, 8, 126, 236, 78, 252, 107, 174, 176, 90, 156, 113, 174, 174, 78, 177, 251, 168, 19, 37, 38, 118, 104, 89, 171, 226, 253, 131, 106, 154, 53, 230, 111, 132, 93, 188, 1, 26, 205, 116, 201, 43, 181, 146, 72, 236, 25, 95, 36, 61, 74, 31, 237, 105, 29, 183, 76, 8, 43, 227, 92, 204, 125, 237, 206, 94, 241, 68, 58, 52, 201, 106, 139, 223, 73, 171, 85, 109, 137, 75, 228, 181, 216, 117, 79, 56, 85, 33, 41, 17, 36, 192, 44, 215, 239, 58, 27, 73, 148, 18, 14, 237, 206, 140, 125, 230, 42, 9, 146, 20, 38, 165, 222, 227, 192, 8, 150, 255, 182, 225, 157, 198, 128 },
                            Status = 0
                        },
                        new
                        {
                            Id = 3,
                            DataCriacao = new DateTime(2021, 3, 23, 9, 31, 17, 872, DateTimeKind.Local).AddTicks(2815),
                            Email = "colaborador@sigo.com.br",
                            Nome = "Usuario 3",
                            Perfil = (short)0,
                            SenhaHash = new byte[] { 228, 96, 138, 100, 229, 103, 12, 6, 72, 36, 24, 89, 104, 255, 175, 206, 166, 236, 108, 131, 169, 221, 30, 94, 113, 88, 95, 230, 245, 244, 215, 254, 51, 75, 178, 128, 226, 227, 0, 237, 132, 213, 110, 34, 112, 104, 190, 165, 44, 115, 132, 90, 50, 90, 194, 115, 239, 0, 40, 63, 90, 164, 155, 9 },
                            SenhaSalt = new byte[] { 33, 247, 226, 24, 225, 190, 8, 126, 236, 78, 252, 107, 174, 176, 90, 156, 113, 174, 174, 78, 177, 251, 168, 19, 37, 38, 118, 104, 89, 171, 226, 253, 131, 106, 154, 53, 230, 111, 132, 93, 188, 1, 26, 205, 116, 201, 43, 181, 146, 72, 236, 25, 95, 36, 61, 74, 31, 237, 105, 29, 183, 76, 8, 43, 227, 92, 204, 125, 237, 206, 94, 241, 68, 58, 52, 201, 106, 139, 223, 73, 171, 85, 109, 137, 75, 228, 181, 216, 117, 79, 56, 85, 33, 41, 17, 36, 192, 44, 215, 239, 58, 27, 73, 148, 18, 14, 237, 206, 140, 125, 230, 42, 9, 146, 20, 38, 165, 222, 227, 192, 8, 150, 255, 182, 225, 157, 198, 128 },
                            Status = 0
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
