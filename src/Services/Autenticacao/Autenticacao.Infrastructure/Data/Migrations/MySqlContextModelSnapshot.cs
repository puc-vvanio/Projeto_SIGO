// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SIGO.Autenticacao.Infrastructure.Data.Context;

namespace SIGO.Autenticacao.Infrastructure.Data.Migrations
{
    [DbContext(typeof(MySqlContext))]
    partial class MySqlContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("SIGO.Autenticacao.Domain.Entities.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<short>("Perfil")
                        .HasColumnType("smallint");

                    b.Property<byte[]>("SenhaHash")
                        .IsRequired()
                        .HasColumnType("varbinary(64)");

                    b.Property<byte[]>("SenhaSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(128)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UltimoAcesso")
                        .HasColumnType("datetime");

                    b.HasKey("Id")
                        .HasName("PK_Usuarios");

                    b.HasIndex("Nome")
                        .HasDatabaseName("Idx_Nome");

                    b.ToTable("usuarios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataCriacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "admin@sigo.com.br",
                            Nome = "Usuario 1",
                            Perfil = (short)32767,
                            SenhaHash = new byte[] { 171, 166, 33, 113, 69, 144, 27, 167, 104, 163, 228, 190, 193, 79, 206, 7, 197, 197, 41, 196, 100, 137, 191, 12, 245, 251, 84, 141, 162, 69, 115, 110, 200, 96, 247, 135, 0, 112, 141, 63, 32, 45, 212, 172, 227, 219, 46, 233, 73, 20, 23, 191, 123, 173, 73, 217, 165, 204, 66, 236, 92, 215, 247, 136 },
                            SenhaSalt = new byte[] { 14, 54, 239, 130, 244, 60, 199, 122, 65, 90, 77, 54, 202, 221, 126, 250, 243, 187, 17, 156, 223, 26, 230, 8, 99, 160, 0, 112, 90, 133, 145, 88, 253, 198, 250, 248, 133, 46, 216, 90, 181, 177, 148, 248, 60, 62, 144, 237, 240, 213, 241, 171, 84, 176, 58, 114, 159, 19, 43, 39, 73, 58, 154, 61, 197, 79, 151, 250, 154, 232, 211, 217, 210, 52, 118, 209, 45, 8, 166, 180, 40, 7, 93, 24, 21, 234, 94, 200, 151, 107, 196, 78, 53, 189, 25, 11, 80, 174, 135, 238, 193, 100, 40, 122, 75, 129, 15, 151, 235, 7, 12, 37, 93, 114, 22, 16, 31, 240, 35, 158, 105, 202, 136, 24, 201, 137, 13, 179 },
                            Status = 0
                        },
                        new
                        {
                            Id = 2,
                            DataCriacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "gerente@sigo.com.br",
                            Nome = "Usuario 2",
                            Perfil = (short)1,
                            SenhaHash = new byte[] { 171, 166, 33, 113, 69, 144, 27, 167, 104, 163, 228, 190, 193, 79, 206, 7, 197, 197, 41, 196, 100, 137, 191, 12, 245, 251, 84, 141, 162, 69, 115, 110, 200, 96, 247, 135, 0, 112, 141, 63, 32, 45, 212, 172, 227, 219, 46, 233, 73, 20, 23, 191, 123, 173, 73, 217, 165, 204, 66, 236, 92, 215, 247, 136 },
                            SenhaSalt = new byte[] { 14, 54, 239, 130, 244, 60, 199, 122, 65, 90, 77, 54, 202, 221, 126, 250, 243, 187, 17, 156, 223, 26, 230, 8, 99, 160, 0, 112, 90, 133, 145, 88, 253, 198, 250, 248, 133, 46, 216, 90, 181, 177, 148, 248, 60, 62, 144, 237, 240, 213, 241, 171, 84, 176, 58, 114, 159, 19, 43, 39, 73, 58, 154, 61, 197, 79, 151, 250, 154, 232, 211, 217, 210, 52, 118, 209, 45, 8, 166, 180, 40, 7, 93, 24, 21, 234, 94, 200, 151, 107, 196, 78, 53, 189, 25, 11, 80, 174, 135, 238, 193, 100, 40, 122, 75, 129, 15, 151, 235, 7, 12, 37, 93, 114, 22, 16, 31, 240, 35, 158, 105, 202, 136, 24, 201, 137, 13, 179 },
                            Status = 0
                        },
                        new
                        {
                            Id = 3,
                            DataCriacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "colaborador@sigo.com.br",
                            Nome = "Usuario 3",
                            Perfil = (short)0,
                            SenhaHash = new byte[] { 171, 166, 33, 113, 69, 144, 27, 167, 104, 163, 228, 190, 193, 79, 206, 7, 197, 197, 41, 196, 100, 137, 191, 12, 245, 251, 84, 141, 162, 69, 115, 110, 200, 96, 247, 135, 0, 112, 141, 63, 32, 45, 212, 172, 227, 219, 46, 233, 73, 20, 23, 191, 123, 173, 73, 217, 165, 204, 66, 236, 92, 215, 247, 136 },
                            SenhaSalt = new byte[] { 14, 54, 239, 130, 244, 60, 199, 122, 65, 90, 77, 54, 202, 221, 126, 250, 243, 187, 17, 156, 223, 26, 230, 8, 99, 160, 0, 112, 90, 133, 145, 88, 253, 198, 250, 248, 133, 46, 216, 90, 181, 177, 148, 248, 60, 62, 144, 237, 240, 213, 241, 171, 84, 176, 58, 114, 159, 19, 43, 39, 73, 58, 154, 61, 197, 79, 151, 250, 154, 232, 211, 217, 210, 52, 118, 209, 45, 8, 166, 180, 40, 7, 93, 24, 21, 234, 94, 200, 151, 107, 196, 78, 53, 189, 25, 11, 80, 174, 135, 238, 193, 100, 40, 122, 75, 129, 15, 151, 235, 7, 12, 37, 93, 114, 22, 16, 31, 240, 35, 158, 105, 202, 136, 24, 201, 137, 13, 179 },
                            Status = 0
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
