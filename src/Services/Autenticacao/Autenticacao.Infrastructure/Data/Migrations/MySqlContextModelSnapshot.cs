// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SIGO.Autenticacao.Infrastructure.Data.Context;

namespace SIGO.Autenticacao.Infrastructure.Data.Migrations
{
    [DbContext(typeof(MySqlContext))]
    partial class MySqlContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("SIGO.Autenticacao.Domain.Entities.Autenticacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("datetime");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UltimoAcesso")
                        .HasColumnType("datetime");

                    b.HasKey("Id")
                        .HasName("PK_Autenticacao");

                    b.HasIndex("Nome")
                        .HasDatabaseName("Idx_Nome");

                    b.ToTable("autenticacao");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataCriacao = new DateTime(2021, 3, 9, 13, 5, 55, 170, DateTimeKind.Local).AddTicks(4947),
                            Descricao = "Descrição Cosnsultoria 1",
                            Nome = "Autenticacao 1"
                        },
                        new
                        {
                            Id = 2,
                            DataCriacao = new DateTime(2021, 3, 9, 13, 5, 55, 170, DateTimeKind.Local).AddTicks(6406),
                            Descricao = "Descrição Cosnsultoria 2",
                            Nome = "Autenticacao 2"
                        });
                });

            modelBuilder.Entity("SIGO.Autenticacao.Domain.Entities.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AutenticacaoID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("datetime");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UltimoAcesso")
                        .HasColumnType("datetime");

                    b.HasKey("Id")
                        .HasName("PK_Usuarios");

                    b.HasIndex("AutenticacaoID");

                    b.HasIndex("Nome")
                        .HasDatabaseName("Idx_Nome");

                    b.ToTable("usuarios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AutenticacaoID = 1,
                            DataCriacao = new DateTime(2021, 3, 9, 13, 5, 55, 171, DateTimeKind.Local).AddTicks(9789),
                            Descricao = "Descrição Usuario 1",
                            Nome = "Usuario 1",
                            Tipo = 0
                        },
                        new
                        {
                            Id = 2,
                            AutenticacaoID = 2,
                            DataCriacao = new DateTime(2021, 3, 9, 13, 5, 55, 172, DateTimeKind.Local).AddTicks(1597),
                            Descricao = "Descrição Usuario 2",
                            Nome = "Usuario 2",
                            Tipo = 1
                        },
                        new
                        {
                            Id = 3,
                            AutenticacaoID = 2,
                            DataCriacao = new DateTime(2021, 3, 9, 13, 5, 55, 172, DateTimeKind.Local).AddTicks(1603),
                            Descricao = "Descrição Usuario 3",
                            Nome = "Usuario 3",
                            Tipo = 32767
                        });
                });

            modelBuilder.Entity("SIGO.Autenticacao.Domain.Entities.Usuario", b =>
                {
                    b.HasOne("SIGO.Autenticacao.Domain.Entities.Autenticacao", "Autenticacao")
                        .WithMany("Usuarios")
                        .HasForeignKey("AutenticacaoID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Autenticacao");
                });

            modelBuilder.Entity("SIGO.Autenticacao.Domain.Entities.Autenticacao", b =>
                {
                    b.Navigation("Usuarios");
                });
#pragma warning restore 612, 618
        }
    }
}
