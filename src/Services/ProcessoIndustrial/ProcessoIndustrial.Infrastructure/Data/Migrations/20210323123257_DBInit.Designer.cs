// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SIGO.ProcessoIndustrial.Infrastructure.Data.Context;

namespace SIGO.ProcessoIndustrial.Infrastructure.Data.Migrations
{
    [DbContext(typeof(MySqlContext))]
    [Migration("20210323123257_DBInit")]
    partial class DBInit
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("SIGO.ProcessoIndustrial.Domain.Entities.Evento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("datetime");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Sistema")
                        .HasColumnType("int");

                    b.Property<int>("TipoEventoID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UltimoAcesso")
                        .HasColumnType("datetime");

                    b.HasKey("Id")
                        .HasName("PK_Eventos");

                    b.HasIndex("Nome")
                        .HasDatabaseName("Idx_Nome");

                    b.HasIndex("TipoEventoID");

                    b.ToTable("eventos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataCriacao = new DateTime(2021, 3, 23, 9, 32, 57, 183, DateTimeKind.Local).AddTicks(4124),
                            Descricao = "Atualização de versão",
                            Nome = "ISO 9001",
                            Sistema = 1,
                            TipoEventoID = 1
                        },
                        new
                        {
                            Id = 2,
                            DataCriacao = new DateTime(2021, 3, 23, 9, 32, 57, 183, DateTimeKind.Local).AddTicks(6357),
                            Descricao = "Precisa realizar manutenção prenventiva",
                            Nome = "Rebobinadeira longitudinal",
                            Sistema = 3,
                            TipoEventoID = 3
                        },
                        new
                        {
                            Id = 3,
                            DataCriacao = new DateTime(2021, 3, 23, 9, 32, 57, 183, DateTimeKind.Local).AddTicks(6364),
                            Descricao = "1000 metros do tecido AX2001 liberado para venda",
                            Nome = "Liberação de produto",
                            Sistema = 5,
                            TipoEventoID = 5
                        });
                });

            modelBuilder.Entity("SIGO.ProcessoIndustrial.Domain.Entities.TipoEvento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("datetime");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UltimoAcesso")
                        .HasColumnType("datetime");

                    b.HasKey("Id")
                        .HasName("PK_TiposEventos");

                    b.HasIndex("Nome")
                        .HasDatabaseName("Idx_Nome");

                    b.ToTable("tipos_eventos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataCriacao = new DateTime(2021, 3, 23, 9, 32, 57, 181, DateTimeKind.Local).AddTicks(2940),
                            Nome = "Norma Atualizada"
                        },
                        new
                        {
                            Id = 2,
                            DataCriacao = new DateTime(2021, 3, 23, 9, 32, 57, 181, DateTimeKind.Local).AddTicks(4693),
                            Nome = "Norma Cancelada"
                        },
                        new
                        {
                            Id = 3,
                            DataCriacao = new DateTime(2021, 3, 23, 9, 32, 57, 181, DateTimeKind.Local).AddTicks(4706),
                            Nome = "Equipamento em Manutenção"
                        },
                        new
                        {
                            Id = 4,
                            DataCriacao = new DateTime(2021, 3, 23, 9, 32, 57, 181, DateTimeKind.Local).AddTicks(4710),
                            Nome = "Atraso de Matéria Prima"
                        },
                        new
                        {
                            Id = 5,
                            DataCriacao = new DateTime(2021, 3, 23, 9, 32, 57, 181, DateTimeKind.Local).AddTicks(4714),
                            Nome = "Estoque de Produto Acabado"
                        });
                });

            modelBuilder.Entity("SIGO.ProcessoIndustrial.Domain.Entities.Evento", b =>
                {
                    b.HasOne("SIGO.ProcessoIndustrial.Domain.Entities.TipoEvento", "TipoEvento")
                        .WithMany()
                        .HasForeignKey("TipoEventoID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("TipoEvento");
                });
#pragma warning restore 612, 618
        }
    }
}
